---
export interface Props {
  title: string;
  description: string;
  level: string;
  duration: string;
  lesson_number: number;
  slug: string;
}

const { title, description, level, duration, lesson_number, slug } = Astro.props;

const levelColors = {
  'débutant': 'bg-green-100 text-green-800',
  'intermédiaire': 'bg-yellow-100 text-yellow-800',
  'avancé': 'bg-red-100 text-red-800'
};
---

<div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100">
  <div class="p-6">
    <div class="flex justify-between items-start mb-4">
      <span class="text-sm font-medium text-gray-500">Leçon {lesson_number}</span>
      <span class={`px-3 py-1 rounded-full text-xs font-medium ${levelColors[level]}`}>
        {level}
      </span>
    </div>
    
    <h3 class="text-xl font-bold text-gray-800 mb-3">{title}</h3>
    <p class="text-gray-600 mb-4 line-clamp-3">{description}</p>
    
    <div class="flex justify-between items-center">
      <div class="flex items-center text-sm text-gray-500">
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        {duration}
      </div>
      
      <a 
        href={`/cours/${slug}`}
        class="bg-gradient-to-r from-orange-500 to-green-500 text-white px-4 py-2 rounded-lg font-medium hover:from-orange-600 hover:to-green-600 transition-all duration-300 transform hover:scale-105"
      >
        Commencer
      </a>
    </div>
  </div>
</div>